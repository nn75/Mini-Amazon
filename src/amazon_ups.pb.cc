// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amazon_ups.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "amazon_ups.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class OrderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Order> {
} _Order_default_instance_;
class LoadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Load> {
} _Load_default_instance_;
class DeliverDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Deliver> {
} _Deliver_default_instance_;
class ConnectedWorldDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConnectedWorld> {
} _ConnectedWorld_default_instance_;
class AUCommandsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AUCommands> {
} _AUCommands_default_instance_;
class TruckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Truck> {
} _Truck_default_instance_;
class ConnectWorldDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConnectWorld> {
} _ConnectWorld_default_instance_;
class DeliveredDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Delivered> {
} _Delivered_default_instance_;
class UACommandsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UACommands> {
} _UACommands_default_instance_;

namespace protobuf_amazon_5fups_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, whid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, seqnum_),
  0,
  1,
  4,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, isloading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, seqnum_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deliver, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deliver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deliver, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deliver, seqnum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedWorld, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedWorld, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedWorld, isconnected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedWorld, seqnum_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, connected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, loading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, todeliver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, acks_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Truck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Truck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Truck, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Truck, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Truck, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Truck, seqnum_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectWorld, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectWorld, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectWorld, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectWorld, seqnum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Delivered, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Delivered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Delivered, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Delivered, seqnum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, toconnect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, arrived_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, finish_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, acks_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(Order)},
  { 14, 21, sizeof(Load)},
  { 24, 30, sizeof(Deliver)},
  { 32, 38, sizeof(ConnectedWorld)},
  { 40, 49, sizeof(AUCommands)},
  { 54, 62, sizeof(Truck)},
  { 66, 72, sizeof(ConnectWorld)},
  { 74, 80, sizeof(Delivered)},
  { 82, 90, sizeof(UACommands)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Load_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Deliver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnectedWorld_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AUCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Truck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnectWorld_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Delivered_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UACommands_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "amazon_ups.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _Order_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Load_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Deliver_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ConnectedWorld_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _AUCommands_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Truck_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ConnectWorld_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Delivered_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _UACommands_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Order_default_instance_.DefaultConstruct();
  _Load_default_instance_.DefaultConstruct();
  _Deliver_default_instance_.DefaultConstruct();
  _ConnectedWorld_default_instance_.DefaultConstruct();
  _AUCommands_default_instance_.DefaultConstruct();
  _Truck_default_instance_.DefaultConstruct();
  _ConnectWorld_default_instance_.DefaultConstruct();
  _Delivered_default_instance_.DefaultConstruct();
  _UACommands_default_instance_.DefaultConstruct();
  _AUCommands_default_instance_.get_mutable()->connected_ = const_cast< ::ConnectedWorld*>(
      ::ConnectedWorld::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020amazon_ups.proto\"N\n\005Order\022\014\n\004whid\030\001 \002("
      "\005\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 \002(\005\022\021\n\tpackageid\030\004 \002"
      "(\003\022\016\n\006seqnum\030\005 \002(\003\"<\n\004Load\022\021\n\tisloading\030"
      "\001 \002(\010\022\021\n\tpackageid\030\002 \002(\003\022\016\n\006seqnum\030\003 \002(\003"
      "\",\n\007Deliver\022\021\n\tpackageid\030\001 \002(\003\022\016\n\006seqnum"
      "\030\002 \002(\003\"5\n\016ConnectedWorld\022\023\n\013isconnected\030"
      "\001 \002(\010\022\016\n\006seqnum\030\002 \002(\003\"\212\001\n\nAUCommands\022\"\n\t"
      "connected\030\001 \001(\0132\017.ConnectedWorld\022\025\n\005orde"
      "r\030\002 \003(\0132\006.Order\022\026\n\007loading\030\003 \003(\0132\005.Load\022"
      "\033\n\ttodeliver\030\004 \003(\0132\010.Deliver\022\014\n\004acks\030\005 \003"
      "(\003\"J\n\005Truck\022\r\n\005whnum\030\001 \002(\005\022\017\n\007truckid\030\002 "
      "\002(\005\022\021\n\tpackageid\030\003 \002(\003\022\016\n\006seqnum\030\004 \002(\003\"/"
      "\n\014ConnectWorld\022\017\n\007worldid\030\001 \002(\003\022\016\n\006seqnu"
      "m\030\002 \002(\003\".\n\tDelivered\022\021\n\tpackageid\030\001 \002(\003\022"
      "\016\n\006seqnum\030\002 \002(\003\"q\n\nUACommands\022 \n\ttoconne"
      "ct\030\001 \003(\0132\r.ConnectWorld\022\027\n\007arrived\030\002 \003(\013"
      "2\006.Truck\022\032\n\006finish\030\003 \003(\0132\n.Delivered\022\014\n\004"
      "acks\030\004 \003(\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "amazon_ups.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_amazon_5fups_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kWhidFieldNumber;
const int Order::kXFieldNumber;
const int Order::kYFieldNumber;
const int Order::kPackageidFieldNumber;
const int Order::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Order)
}
Order::Order(const Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whid_, &from.whid_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&whid_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Order)
}

void Order::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&whid_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&whid_) + sizeof(y_));
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:Order)
  SharedDtor();
}

void Order::SharedDtor() {
}

void Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[0].descriptor;
}

const Order& Order::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

Order* Order::New(::google::protobuf::Arena* arena) const {
  Order* n = new Order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:Order)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&whid_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&whid_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (tag == 16u) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (tag == 24u) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 packageid = 4;
      case 4: {
        if (tag == 32u) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 5;
      case 5: {
        if (tag == 40u) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Order)
  return false;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Order)
  // required int32 whid = 1;
  if (has_whid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whid(), output);
  }

  // required int32 x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // required int64 packageid = 4;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->packageid(), output);
  }

  // required int64 seqnum = 5;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Order)
  // required int32 whid = 1;
  if (has_whid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whid(), target);
  }

  // required int32 x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // required int64 packageid = 4;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->packageid(), target);
  }

  // required int64 seqnum = 5;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Order)
  return target;
}

size_t Order::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Order)
  size_t total_size = 0;

  if (has_whid()) {
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_packageid()) {
    // required int64 packageid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Order)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int64 packageid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_whid()) {
      set_whid(from.whid());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  std::swap(whid_, other->whid_);
  std::swap(x_, other->x_);
  std::swap(packageid_, other->packageid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Order

// required int32 whid = 1;
bool Order::has_whid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Order::set_has_whid() {
  _has_bits_[0] |= 0x00000001u;
}
void Order::clear_has_whid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Order::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
::google::protobuf::int32 Order::whid() const {
  // @@protoc_insertion_point(field_get:Order.whid)
  return whid_;
}
void Order::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:Order.whid)
}

// required int32 x = 2;
bool Order::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Order::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void Order::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void Order::clear_x() {
  x_ = 0;
  clear_has_x();
}
::google::protobuf::int32 Order::x() const {
  // @@protoc_insertion_point(field_get:Order.x)
  return x_;
}
void Order::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Order.x)
}

// required int32 y = 3;
bool Order::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Order::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
void Order::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
void Order::clear_y() {
  y_ = 0;
  clear_has_y();
}
::google::protobuf::int32 Order::y() const {
  // @@protoc_insertion_point(field_get:Order.y)
  return y_;
}
void Order::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Order.y)
}

// required int64 packageid = 4;
bool Order::has_packageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Order::set_has_packageid() {
  _has_bits_[0] |= 0x00000004u;
}
void Order::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Order::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
::google::protobuf::int64 Order::packageid() const {
  // @@protoc_insertion_point(field_get:Order.packageid)
  return packageid_;
}
void Order::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:Order.packageid)
}

// required int64 seqnum = 5;
bool Order::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Order::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
void Order::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void Order::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
::google::protobuf::int64 Order::seqnum() const {
  // @@protoc_insertion_point(field_get:Order.seqnum)
  return seqnum_;
}
void Order::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:Order.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Load::kIsloadingFieldNumber;
const int Load::kPackageidFieldNumber;
const int Load::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Load::Load()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Load)
}
Load::Load(const Load& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    reinterpret_cast<char*>(&isloading_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(isloading_));
  // @@protoc_insertion_point(copy_constructor:Load)
}

void Load::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packageid_, 0, reinterpret_cast<char*>(&isloading_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(isloading_));
}

Load::~Load() {
  // @@protoc_insertion_point(destructor:Load)
  SharedDtor();
}

void Load::SharedDtor() {
}

void Load::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Load::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[1].descriptor;
}

const Load& Load::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

Load* Load::New(::google::protobuf::Arena* arena) const {
  Load* n = new Load;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Load::Clear() {
// @@protoc_insertion_point(message_clear_start:Load)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&packageid_, 0, reinterpret_cast<char*>(&isloading_) -
      reinterpret_cast<char*>(&packageid_) + sizeof(isloading_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Load)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool isloading = 1;
      case 1: {
        if (tag == 8u) {
          set_has_isloading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isloading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 packageid = 2;
      case 2: {
        if (tag == 16u) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (tag == 24u) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Load)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Load)
  return false;
#undef DO_
}

void Load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Load)
  // required bool isloading = 1;
  if (has_isloading()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isloading(), output);
  }

  // required int64 packageid = 2;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->packageid(), output);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Load)
}

::google::protobuf::uint8* Load::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Load)
  // required bool isloading = 1;
  if (has_isloading()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isloading(), target);
  }

  // required int64 packageid = 2;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->packageid(), target);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Load)
  return target;
}

size_t Load::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Load)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_isloading()) {
    // required bool isloading = 1;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Load)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 packageid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required bool isloading = 1;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Load::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Load)
  GOOGLE_DCHECK_NE(&from, this);
  const Load* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Load>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Load)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Load)
    MergeFrom(*source);
  }
}

void Load::MergeFrom(const Load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
    if (from.has_isloading()) {
      set_isloading(from.isloading());
    }
  }
}

void Load::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Load::CopyFrom(const Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Load::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Load::Swap(Load* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Load::InternalSwap(Load* other) {
  std::swap(packageid_, other->packageid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(isloading_, other->isloading_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Load::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Load

// required bool isloading = 1;
bool Load::has_isloading() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Load::set_has_isloading() {
  _has_bits_[0] |= 0x00000004u;
}
void Load::clear_has_isloading() {
  _has_bits_[0] &= ~0x00000004u;
}
void Load::clear_isloading() {
  isloading_ = false;
  clear_has_isloading();
}
bool Load::isloading() const {
  // @@protoc_insertion_point(field_get:Load.isloading)
  return isloading_;
}
void Load::set_isloading(bool value) {
  set_has_isloading();
  isloading_ = value;
  // @@protoc_insertion_point(field_set:Load.isloading)
}

// required int64 packageid = 2;
bool Load::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Load::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
void Load::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Load::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
::google::protobuf::int64 Load::packageid() const {
  // @@protoc_insertion_point(field_get:Load.packageid)
  return packageid_;
}
void Load::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:Load.packageid)
}

// required int64 seqnum = 3;
bool Load::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Load::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void Load::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void Load::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
::google::protobuf::int64 Load::seqnum() const {
  // @@protoc_insertion_point(field_get:Load.seqnum)
  return seqnum_;
}
void Load::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:Load.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Deliver::kPackageidFieldNumber;
const int Deliver::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Deliver::Deliver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Deliver)
}
Deliver::Deliver(const Deliver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:Deliver)
}

void Deliver::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packageid_, 0, reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(seqnum_));
}

Deliver::~Deliver() {
  // @@protoc_insertion_point(destructor:Deliver)
  SharedDtor();
}

void Deliver::SharedDtor() {
}

void Deliver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deliver::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[2].descriptor;
}

const Deliver& Deliver::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

Deliver* Deliver::New(::google::protobuf::Arena* arena) const {
  Deliver* n = new Deliver;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Deliver::Clear() {
// @@protoc_insertion_point(message_clear_start:Deliver)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&packageid_, 0, reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&packageid_) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Deliver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Deliver)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16u) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Deliver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Deliver)
  return false;
#undef DO_
}

void Deliver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Deliver)
  // required int64 packageid = 1;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Deliver)
}

::google::protobuf::uint8* Deliver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Deliver)
  // required int64 packageid = 1;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Deliver)
  return target;
}

size_t Deliver::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Deliver)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t Deliver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Deliver)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deliver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Deliver)
  GOOGLE_DCHECK_NE(&from, this);
  const Deliver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Deliver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Deliver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Deliver)
    MergeFrom(*source);
  }
}

void Deliver::MergeFrom(const Deliver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Deliver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
}

void Deliver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Deliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deliver::CopyFrom(const Deliver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Deliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deliver::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Deliver::Swap(Deliver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Deliver::InternalSwap(Deliver* other) {
  std::swap(packageid_, other->packageid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Deliver::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Deliver

// required int64 packageid = 1;
bool Deliver::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Deliver::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
void Deliver::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Deliver::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
::google::protobuf::int64 Deliver::packageid() const {
  // @@protoc_insertion_point(field_get:Deliver.packageid)
  return packageid_;
}
void Deliver::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:Deliver.packageid)
}

// required int64 seqnum = 2;
bool Deliver::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Deliver::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void Deliver::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void Deliver::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
::google::protobuf::int64 Deliver::seqnum() const {
  // @@protoc_insertion_point(field_get:Deliver.seqnum)
  return seqnum_;
}
void Deliver::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:Deliver.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectedWorld::kIsconnectedFieldNumber;
const int ConnectedWorld::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectedWorld::ConnectedWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConnectedWorld)
}
ConnectedWorld::ConnectedWorld(const ConnectedWorld& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    reinterpret_cast<char*>(&isconnected_) -
    reinterpret_cast<char*>(&seqnum_) + sizeof(isconnected_));
  // @@protoc_insertion_point(copy_constructor:ConnectedWorld)
}

void ConnectedWorld::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seqnum_, 0, reinterpret_cast<char*>(&isconnected_) -
    reinterpret_cast<char*>(&seqnum_) + sizeof(isconnected_));
}

ConnectedWorld::~ConnectedWorld() {
  // @@protoc_insertion_point(destructor:ConnectedWorld)
  SharedDtor();
}

void ConnectedWorld::SharedDtor() {
}

void ConnectedWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectedWorld::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[3].descriptor;
}

const ConnectedWorld& ConnectedWorld::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnectedWorld* ConnectedWorld::New(::google::protobuf::Arena* arena) const {
  ConnectedWorld* n = new ConnectedWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectedWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:ConnectedWorld)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&seqnum_, 0, reinterpret_cast<char*>(&isconnected_) -
      reinterpret_cast<char*>(&seqnum_) + sizeof(isconnected_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectedWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConnectedWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool isconnected = 1;
      case 1: {
        if (tag == 8u) {
          set_has_isconnected();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isconnected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16u) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConnectedWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConnectedWorld)
  return false;
#undef DO_
}

void ConnectedWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConnectedWorld)
  // required bool isconnected = 1;
  if (has_isconnected()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isconnected(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConnectedWorld)
}

::google::protobuf::uint8* ConnectedWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConnectedWorld)
  // required bool isconnected = 1;
  if (has_isconnected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isconnected(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConnectedWorld)
  return target;
}

size_t ConnectedWorld::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ConnectedWorld)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_isconnected()) {
    // required bool isconnected = 1;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ConnectedWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConnectedWorld)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required bool isconnected = 1;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectedWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConnectedWorld)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectedWorld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectedWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConnectedWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConnectedWorld)
    MergeFrom(*source);
  }
}

void ConnectedWorld::MergeFrom(const ConnectedWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConnectedWorld)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
    if (from.has_isconnected()) {
      set_isconnected(from.isconnected());
    }
  }
}

void ConnectedWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConnectedWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectedWorld::CopyFrom(const ConnectedWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConnectedWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectedWorld::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ConnectedWorld::Swap(ConnectedWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectedWorld::InternalSwap(ConnectedWorld* other) {
  std::swap(seqnum_, other->seqnum_);
  std::swap(isconnected_, other->isconnected_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectedWorld::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectedWorld

// required bool isconnected = 1;
bool ConnectedWorld::has_isconnected() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ConnectedWorld::set_has_isconnected() {
  _has_bits_[0] |= 0x00000002u;
}
void ConnectedWorld::clear_has_isconnected() {
  _has_bits_[0] &= ~0x00000002u;
}
void ConnectedWorld::clear_isconnected() {
  isconnected_ = false;
  clear_has_isconnected();
}
bool ConnectedWorld::isconnected() const {
  // @@protoc_insertion_point(field_get:ConnectedWorld.isconnected)
  return isconnected_;
}
void ConnectedWorld::set_isconnected(bool value) {
  set_has_isconnected();
  isconnected_ = value;
  // @@protoc_insertion_point(field_set:ConnectedWorld.isconnected)
}

// required int64 seqnum = 2;
bool ConnectedWorld::has_seqnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConnectedWorld::set_has_seqnum() {
  _has_bits_[0] |= 0x00000001u;
}
void ConnectedWorld::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConnectedWorld::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
::google::protobuf::int64 ConnectedWorld::seqnum() const {
  // @@protoc_insertion_point(field_get:ConnectedWorld.seqnum)
  return seqnum_;
}
void ConnectedWorld::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:ConnectedWorld.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUCommands::kConnectedFieldNumber;
const int AUCommands::kOrderFieldNumber;
const int AUCommands::kLoadingFieldNumber;
const int AUCommands::kTodeliverFieldNumber;
const int AUCommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUCommands::AUCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUCommands)
}
AUCommands::AUCommands(const AUCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      order_(from.order_),
      loading_(from.loading_),
      todeliver_(from.todeliver_),
      acks_(from.acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_connected()) {
    connected_ = new ::ConnectedWorld(*from.connected_);
  } else {
    connected_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AUCommands)
}

void AUCommands::SharedCtor() {
  _cached_size_ = 0;
  connected_ = NULL;
}

AUCommands::~AUCommands() {
  // @@protoc_insertion_point(destructor:AUCommands)
  SharedDtor();
}

void AUCommands::SharedDtor() {
  if (this != internal_default_instance()) {
    delete connected_;
  }
}

void AUCommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUCommands::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[4].descriptor;
}

const AUCommands& AUCommands::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

AUCommands* AUCommands::New(::google::protobuf::Arena* arena) const {
  AUCommands* n = new AUCommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AUCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:AUCommands)
  order_.Clear();
  loading_.Clear();
  todeliver_.Clear();
  acks_.Clear();
  if (has_connected()) {
    GOOGLE_DCHECK(connected_ != NULL);
    connected_->::ConnectedWorld::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AUCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUCommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ConnectedWorld connected = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_connected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Order order = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_order()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Load loading = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_loading()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Deliver todeliver = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_todeliver()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated int64 acks = 5;
      case 5: {
        if (tag == 40u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 40u, input, this->mutable_acks())));
        } else if (tag == 42u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUCommands)
  return false;
#undef DO_
}

void AUCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUCommands)
  // optional .ConnectedWorld connected = 1;
  if (has_connected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->connected_, output);
  }

  // repeated .Order order = 2;
  for (unsigned int i = 0, n = this->order_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->order(i), output);
  }

  // repeated .Load loading = 3;
  for (unsigned int i = 0, n = this->loading_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->loading(i), output);
  }

  // repeated .Deliver todeliver = 4;
  for (unsigned int i = 0, n = this->todeliver_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->todeliver(i), output);
  }

  // repeated int64 acks = 5;
  for (int i = 0; i < this->acks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      5, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUCommands)
}

::google::protobuf::uint8* AUCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AUCommands)
  // optional .ConnectedWorld connected = 1;
  if (has_connected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->connected_, false, target);
  }

  // repeated .Order order = 2;
  for (unsigned int i = 0, n = this->order_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->order(i), false, target);
  }

  // repeated .Load loading = 3;
  for (unsigned int i = 0, n = this->loading_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->loading(i), false, target);
  }

  // repeated .Deliver todeliver = 4;
  for (unsigned int i = 0, n = this->todeliver_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->todeliver(i), false, target);
  }

  // repeated int64 acks = 5;
  for (int i = 0; i < this->acks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(5, this->acks(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUCommands)
  return target;
}

size_t AUCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AUCommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Order order = 2;
  {
    unsigned int count = this->order_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order(i));
    }
  }

  // repeated .Load loading = 3;
  {
    unsigned int count = this->loading_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->loading(i));
    }
  }

  // repeated .Deliver todeliver = 4;
  {
    unsigned int count = this->todeliver_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->todeliver(i));
    }
  }

  // repeated int64 acks = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  // optional .ConnectedWorld connected = 1;
  if (has_connected()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->connected_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const AUCommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AUCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUCommands)
    MergeFrom(*source);
  }
}

void AUCommands::MergeFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_.MergeFrom(from.order_);
  loading_.MergeFrom(from.loading_);
  todeliver_.MergeFrom(from.todeliver_);
  acks_.MergeFrom(from.acks_);
  if (from.has_connected()) {
    mutable_connected()->::ConnectedWorld::MergeFrom(from.connected());
  }
}

void AUCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUCommands::CopyFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUCommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->order())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->loading())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->todeliver())) return false;
  if (has_connected()) {
    if (!this->connected_->IsInitialized()) return false;
  }
  return true;
}

void AUCommands::Swap(AUCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUCommands::InternalSwap(AUCommands* other) {
  order_.UnsafeArenaSwap(&other->order_);
  loading_.UnsafeArenaSwap(&other->loading_);
  todeliver_.UnsafeArenaSwap(&other->todeliver_);
  acks_.UnsafeArenaSwap(&other->acks_);
  std::swap(connected_, other->connected_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AUCommands::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AUCommands

// optional .ConnectedWorld connected = 1;
bool AUCommands::has_connected() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AUCommands::set_has_connected() {
  _has_bits_[0] |= 0x00000001u;
}
void AUCommands::clear_has_connected() {
  _has_bits_[0] &= ~0x00000001u;
}
void AUCommands::clear_connected() {
  if (connected_ != NULL) connected_->::ConnectedWorld::Clear();
  clear_has_connected();
}
const ::ConnectedWorld& AUCommands::connected() const {
  // @@protoc_insertion_point(field_get:AUCommands.connected)
  return connected_ != NULL ? *connected_
                         : *::ConnectedWorld::internal_default_instance();
}
::ConnectedWorld* AUCommands::mutable_connected() {
  set_has_connected();
  if (connected_ == NULL) {
    connected_ = new ::ConnectedWorld;
  }
  // @@protoc_insertion_point(field_mutable:AUCommands.connected)
  return connected_;
}
::ConnectedWorld* AUCommands::release_connected() {
  // @@protoc_insertion_point(field_release:AUCommands.connected)
  clear_has_connected();
  ::ConnectedWorld* temp = connected_;
  connected_ = NULL;
  return temp;
}
void AUCommands::set_allocated_connected(::ConnectedWorld* connected) {
  delete connected_;
  connected_ = connected;
  if (connected) {
    set_has_connected();
  } else {
    clear_has_connected();
  }
  // @@protoc_insertion_point(field_set_allocated:AUCommands.connected)
}

// repeated .Order order = 2;
int AUCommands::order_size() const {
  return order_.size();
}
void AUCommands::clear_order() {
  order_.Clear();
}
const ::Order& AUCommands::order(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.order)
  return order_.Get(index);
}
::Order* AUCommands::mutable_order(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.order)
  return order_.Mutable(index);
}
::Order* AUCommands::add_order() {
  // @@protoc_insertion_point(field_add:AUCommands.order)
  return order_.Add();
}
::google::protobuf::RepeatedPtrField< ::Order >*
AUCommands::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.order)
  return &order_;
}
const ::google::protobuf::RepeatedPtrField< ::Order >&
AUCommands::order() const {
  // @@protoc_insertion_point(field_list:AUCommands.order)
  return order_;
}

// repeated .Load loading = 3;
int AUCommands::loading_size() const {
  return loading_.size();
}
void AUCommands::clear_loading() {
  loading_.Clear();
}
const ::Load& AUCommands::loading(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.loading)
  return loading_.Get(index);
}
::Load* AUCommands::mutable_loading(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.loading)
  return loading_.Mutable(index);
}
::Load* AUCommands::add_loading() {
  // @@protoc_insertion_point(field_add:AUCommands.loading)
  return loading_.Add();
}
::google::protobuf::RepeatedPtrField< ::Load >*
AUCommands::mutable_loading() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.loading)
  return &loading_;
}
const ::google::protobuf::RepeatedPtrField< ::Load >&
AUCommands::loading() const {
  // @@protoc_insertion_point(field_list:AUCommands.loading)
  return loading_;
}

// repeated .Deliver todeliver = 4;
int AUCommands::todeliver_size() const {
  return todeliver_.size();
}
void AUCommands::clear_todeliver() {
  todeliver_.Clear();
}
const ::Deliver& AUCommands::todeliver(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.todeliver)
  return todeliver_.Get(index);
}
::Deliver* AUCommands::mutable_todeliver(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.todeliver)
  return todeliver_.Mutable(index);
}
::Deliver* AUCommands::add_todeliver() {
  // @@protoc_insertion_point(field_add:AUCommands.todeliver)
  return todeliver_.Add();
}
::google::protobuf::RepeatedPtrField< ::Deliver >*
AUCommands::mutable_todeliver() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.todeliver)
  return &todeliver_;
}
const ::google::protobuf::RepeatedPtrField< ::Deliver >&
AUCommands::todeliver() const {
  // @@protoc_insertion_point(field_list:AUCommands.todeliver)
  return todeliver_;
}

// repeated int64 acks = 5;
int AUCommands::acks_size() const {
  return acks_.size();
}
void AUCommands::clear_acks() {
  acks_.Clear();
}
::google::protobuf::int64 AUCommands::acks(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.acks)
  return acks_.Get(index);
}
void AUCommands::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:AUCommands.acks)
}
void AUCommands::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:AUCommands.acks)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AUCommands::acks() const {
  // @@protoc_insertion_point(field_list:AUCommands.acks)
  return acks_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AUCommands::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.acks)
  return &acks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Truck::kWhnumFieldNumber;
const int Truck::kTruckidFieldNumber;
const int Truck::kPackageidFieldNumber;
const int Truck::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Truck::Truck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Truck)
}
Truck::Truck(const Truck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whnum_, &from.whnum_,
    reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&whnum_) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:Truck)
}

void Truck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&whnum_, 0, reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&whnum_) + sizeof(seqnum_));
}

Truck::~Truck() {
  // @@protoc_insertion_point(destructor:Truck)
  SharedDtor();
}

void Truck::SharedDtor() {
}

void Truck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Truck::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[5].descriptor;
}

const Truck& Truck::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

Truck* Truck::New(::google::protobuf::Arena* arena) const {
  Truck* n = new Truck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Truck::Clear() {
// @@protoc_insertion_point(message_clear_start:Truck)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&whnum_, 0, reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&whnum_) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Truck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Truck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (tag == 8u) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (tag == 16u) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 packageid = 3;
      case 3: {
        if (tag == 24u) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (tag == 32u) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Truck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Truck)
  return false;
#undef DO_
}

void Truck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Truck)
  // required int32 whnum = 1;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // required int32 truckid = 2;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  // required int64 packageid = 3;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->packageid(), output);
  }

  // required int64 seqnum = 4;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Truck)
}

::google::protobuf::uint8* Truck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Truck)
  // required int32 whnum = 1;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // required int32 truckid = 2;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  // required int64 packageid = 3;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->packageid(), target);
  }

  // required int64 seqnum = 4;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Truck)
  return target;
}

size_t Truck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Truck)
  size_t total_size = 0;

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_packageid()) {
    // required int64 packageid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t Truck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Truck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int64 packageid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Truck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Truck)
  GOOGLE_DCHECK_NE(&from, this);
  const Truck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Truck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Truck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Truck)
    MergeFrom(*source);
  }
}

void Truck::MergeFrom(const Truck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Truck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_whnum()) {
      set_whnum(from.whnum());
    }
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
}

void Truck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Truck::CopyFrom(const Truck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Truck::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Truck::Swap(Truck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Truck::InternalSwap(Truck* other) {
  std::swap(whnum_, other->whnum_);
  std::swap(truckid_, other->truckid_);
  std::swap(packageid_, other->packageid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Truck::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Truck

// required int32 whnum = 1;
bool Truck::has_whnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Truck::set_has_whnum() {
  _has_bits_[0] |= 0x00000001u;
}
void Truck::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void Truck::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
::google::protobuf::int32 Truck::whnum() const {
  // @@protoc_insertion_point(field_get:Truck.whnum)
  return whnum_;
}
void Truck::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:Truck.whnum)
}

// required int32 truckid = 2;
bool Truck::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Truck::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
void Truck::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Truck::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
::google::protobuf::int32 Truck::truckid() const {
  // @@protoc_insertion_point(field_get:Truck.truckid)
  return truckid_;
}
void Truck::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:Truck.truckid)
}

// required int64 packageid = 3;
bool Truck::has_packageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Truck::set_has_packageid() {
  _has_bits_[0] |= 0x00000004u;
}
void Truck::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Truck::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
::google::protobuf::int64 Truck::packageid() const {
  // @@protoc_insertion_point(field_get:Truck.packageid)
  return packageid_;
}
void Truck::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:Truck.packageid)
}

// required int64 seqnum = 4;
bool Truck::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Truck::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
void Truck::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void Truck::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
::google::protobuf::int64 Truck::seqnum() const {
  // @@protoc_insertion_point(field_get:Truck.seqnum)
  return seqnum_;
}
void Truck::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:Truck.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectWorld::kWorldidFieldNumber;
const int ConnectWorld::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectWorld::ConnectWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConnectWorld)
}
ConnectWorld::ConnectWorld(const ConnectWorld& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&worldid_, &from.worldid_,
    reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&worldid_) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:ConnectWorld)
}

void ConnectWorld::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&worldid_, 0, reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&worldid_) + sizeof(seqnum_));
}

ConnectWorld::~ConnectWorld() {
  // @@protoc_insertion_point(destructor:ConnectWorld)
  SharedDtor();
}

void ConnectWorld::SharedDtor() {
}

void ConnectWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectWorld::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[6].descriptor;
}

const ConnectWorld& ConnectWorld::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnectWorld* ConnectWorld::New(::google::protobuf::Arena* arena) const {
  ConnectWorld* n = new ConnectWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:ConnectWorld)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&worldid_, 0, reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&worldid_) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConnectWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16u) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConnectWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConnectWorld)
  return false;
#undef DO_
}

void ConnectWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConnectWorld)
  // required int64 worldid = 1;
  if (has_worldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConnectWorld)
}

::google::protobuf::uint8* ConnectWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConnectWorld)
  // required int64 worldid = 1;
  if (has_worldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConnectWorld)
  return target;
}

size_t ConnectWorld::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ConnectWorld)
  size_t total_size = 0;

  if (has_worldid()) {
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t ConnectWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConnectWorld)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConnectWorld)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectWorld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConnectWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConnectWorld)
    MergeFrom(*source);
  }
}

void ConnectWorld::MergeFrom(const ConnectWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConnectWorld)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_worldid()) {
      set_worldid(from.worldid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
}

void ConnectWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConnectWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectWorld::CopyFrom(const ConnectWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConnectWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectWorld::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ConnectWorld::Swap(ConnectWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectWorld::InternalSwap(ConnectWorld* other) {
  std::swap(worldid_, other->worldid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectWorld::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectWorld

// required int64 worldid = 1;
bool ConnectWorld::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConnectWorld::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
void ConnectWorld::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConnectWorld::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
::google::protobuf::int64 ConnectWorld::worldid() const {
  // @@protoc_insertion_point(field_get:ConnectWorld.worldid)
  return worldid_;
}
void ConnectWorld::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:ConnectWorld.worldid)
}

// required int64 seqnum = 2;
bool ConnectWorld::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ConnectWorld::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void ConnectWorld::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void ConnectWorld::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
::google::protobuf::int64 ConnectWorld::seqnum() const {
  // @@protoc_insertion_point(field_get:ConnectWorld.seqnum)
  return seqnum_;
}
void ConnectWorld::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:ConnectWorld.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Delivered::kPackageidFieldNumber;
const int Delivered::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Delivered::Delivered()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Delivered)
}
Delivered::Delivered(const Delivered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:Delivered)
}

void Delivered::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packageid_, 0, reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(seqnum_));
}

Delivered::~Delivered() {
  // @@protoc_insertion_point(destructor:Delivered)
  SharedDtor();
}

void Delivered::SharedDtor() {
}

void Delivered::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Delivered::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[7].descriptor;
}

const Delivered& Delivered::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

Delivered* Delivered::New(::google::protobuf::Arena* arena) const {
  Delivered* n = new Delivered;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Delivered::Clear() {
// @@protoc_insertion_point(message_clear_start:Delivered)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&packageid_, 0, reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&packageid_) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Delivered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Delivered)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16u) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Delivered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Delivered)
  return false;
#undef DO_
}

void Delivered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Delivered)
  // required int64 packageid = 1;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Delivered)
}

::google::protobuf::uint8* Delivered::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Delivered)
  // required int64 packageid = 1;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Delivered)
  return target;
}

size_t Delivered::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Delivered)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t Delivered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Delivered)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Delivered::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Delivered)
  GOOGLE_DCHECK_NE(&from, this);
  const Delivered* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Delivered>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Delivered)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Delivered)
    MergeFrom(*source);
  }
}

void Delivered::MergeFrom(const Delivered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Delivered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
}

void Delivered::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Delivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Delivered::CopyFrom(const Delivered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Delivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Delivered::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Delivered::Swap(Delivered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Delivered::InternalSwap(Delivered* other) {
  std::swap(packageid_, other->packageid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Delivered::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Delivered

// required int64 packageid = 1;
bool Delivered::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Delivered::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
void Delivered::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Delivered::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
::google::protobuf::int64 Delivered::packageid() const {
  // @@protoc_insertion_point(field_get:Delivered.packageid)
  return packageid_;
}
void Delivered::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:Delivered.packageid)
}

// required int64 seqnum = 2;
bool Delivered::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Delivered::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void Delivered::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void Delivered::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
::google::protobuf::int64 Delivered::seqnum() const {
  // @@protoc_insertion_point(field_get:Delivered.seqnum)
  return seqnum_;
}
void Delivered::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:Delivered.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UACommands::kToconnectFieldNumber;
const int UACommands::kArrivedFieldNumber;
const int UACommands::kFinishFieldNumber;
const int UACommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UACommands::UACommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_amazon_5fups_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UACommands)
}
UACommands::UACommands(const UACommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      toconnect_(from.toconnect_),
      arrived_(from.arrived_),
      finish_(from.finish_),
      acks_(from.acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UACommands)
}

void UACommands::SharedCtor() {
  _cached_size_ = 0;
}

UACommands::~UACommands() {
  // @@protoc_insertion_point(destructor:UACommands)
  SharedDtor();
}

void UACommands::SharedDtor() {
}

void UACommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UACommands::descriptor() {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[8].descriptor;
}

const UACommands& UACommands::default_instance() {
  protobuf_amazon_5fups_2eproto::InitDefaults();
  return *internal_default_instance();
}

UACommands* UACommands::New(::google::protobuf::Arena* arena) const {
  UACommands* n = new UACommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:UACommands)
  toconnect_.Clear();
  arrived_.Clear();
  finish_.Clear();
  acks_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UACommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ConnectWorld toconnect = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_toconnect()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Truck arrived = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arrived()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Delivered finish = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_finish()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated int64 acks = 4;
      case 4: {
        if (tag == 32u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32u, input, this->mutable_acks())));
        } else if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UACommands)
  return false;
#undef DO_
}

void UACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UACommands)
  // repeated .ConnectWorld toconnect = 1;
  for (unsigned int i = 0, n = this->toconnect_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->toconnect(i), output);
  }

  // repeated .Truck arrived = 2;
  for (unsigned int i = 0, n = this->arrived_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrived(i), output);
  }

  // repeated .Delivered finish = 3;
  for (unsigned int i = 0, n = this->finish_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->finish(i), output);
  }

  // repeated int64 acks = 4;
  for (int i = 0; i < this->acks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UACommands)
}

::google::protobuf::uint8* UACommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UACommands)
  // repeated .ConnectWorld toconnect = 1;
  for (unsigned int i = 0, n = this->toconnect_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->toconnect(i), false, target);
  }

  // repeated .Truck arrived = 2;
  for (unsigned int i = 0, n = this->arrived_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->arrived(i), false, target);
  }

  // repeated .Delivered finish = 3;
  for (unsigned int i = 0, n = this->finish_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->finish(i), false, target);
  }

  // repeated int64 acks = 4;
  for (int i = 0; i < this->acks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->acks(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UACommands)
  return target;
}

size_t UACommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UACommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ConnectWorld toconnect = 1;
  {
    unsigned int count = this->toconnect_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->toconnect(i));
    }
  }

  // repeated .Truck arrived = 2;
  {
    unsigned int count = this->arrived_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arrived(i));
    }
  }

  // repeated .Delivered finish = 3;
  {
    unsigned int count = this->finish_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->finish(i));
    }
  }

  // repeated int64 acks = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UACommands)
  GOOGLE_DCHECK_NE(&from, this);
  const UACommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UACommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UACommands)
    MergeFrom(*source);
  }
}

void UACommands::MergeFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UACommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  toconnect_.MergeFrom(from.toconnect_);
  arrived_.MergeFrom(from.arrived_);
  finish_.MergeFrom(from.finish_);
  acks_.MergeFrom(from.acks_);
}

void UACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UACommands::CopyFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UACommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->toconnect())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->arrived())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->finish())) return false;
  return true;
}

void UACommands::Swap(UACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UACommands::InternalSwap(UACommands* other) {
  toconnect_.UnsafeArenaSwap(&other->toconnect_);
  arrived_.UnsafeArenaSwap(&other->arrived_);
  finish_.UnsafeArenaSwap(&other->finish_);
  acks_.UnsafeArenaSwap(&other->acks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UACommands::GetMetadata() const {
  protobuf_amazon_5fups_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_amazon_5fups_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UACommands

// repeated .ConnectWorld toconnect = 1;
int UACommands::toconnect_size() const {
  return toconnect_.size();
}
void UACommands::clear_toconnect() {
  toconnect_.Clear();
}
const ::ConnectWorld& UACommands::toconnect(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.toconnect)
  return toconnect_.Get(index);
}
::ConnectWorld* UACommands::mutable_toconnect(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.toconnect)
  return toconnect_.Mutable(index);
}
::ConnectWorld* UACommands::add_toconnect() {
  // @@protoc_insertion_point(field_add:UACommands.toconnect)
  return toconnect_.Add();
}
::google::protobuf::RepeatedPtrField< ::ConnectWorld >*
UACommands::mutable_toconnect() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.toconnect)
  return &toconnect_;
}
const ::google::protobuf::RepeatedPtrField< ::ConnectWorld >&
UACommands::toconnect() const {
  // @@protoc_insertion_point(field_list:UACommands.toconnect)
  return toconnect_;
}

// repeated .Truck arrived = 2;
int UACommands::arrived_size() const {
  return arrived_.size();
}
void UACommands::clear_arrived() {
  arrived_.Clear();
}
const ::Truck& UACommands::arrived(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.arrived)
  return arrived_.Get(index);
}
::Truck* UACommands::mutable_arrived(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.arrived)
  return arrived_.Mutable(index);
}
::Truck* UACommands::add_arrived() {
  // @@protoc_insertion_point(field_add:UACommands.arrived)
  return arrived_.Add();
}
::google::protobuf::RepeatedPtrField< ::Truck >*
UACommands::mutable_arrived() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.arrived)
  return &arrived_;
}
const ::google::protobuf::RepeatedPtrField< ::Truck >&
UACommands::arrived() const {
  // @@protoc_insertion_point(field_list:UACommands.arrived)
  return arrived_;
}

// repeated .Delivered finish = 3;
int UACommands::finish_size() const {
  return finish_.size();
}
void UACommands::clear_finish() {
  finish_.Clear();
}
const ::Delivered& UACommands::finish(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.finish)
  return finish_.Get(index);
}
::Delivered* UACommands::mutable_finish(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.finish)
  return finish_.Mutable(index);
}
::Delivered* UACommands::add_finish() {
  // @@protoc_insertion_point(field_add:UACommands.finish)
  return finish_.Add();
}
::google::protobuf::RepeatedPtrField< ::Delivered >*
UACommands::mutable_finish() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.finish)
  return &finish_;
}
const ::google::protobuf::RepeatedPtrField< ::Delivered >&
UACommands::finish() const {
  // @@protoc_insertion_point(field_list:UACommands.finish)
  return finish_;
}

// repeated int64 acks = 4;
int UACommands::acks_size() const {
  return acks_.size();
}
void UACommands::clear_acks() {
  acks_.Clear();
}
::google::protobuf::int64 UACommands::acks(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.acks)
  return acks_.Get(index);
}
void UACommands::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:UACommands.acks)
}
void UACommands::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:UACommands.acks)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
UACommands::acks() const {
  // @@protoc_insertion_point(field_list:UACommands.acks)
  return acks_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
UACommands::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.acks)
  return &acks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
